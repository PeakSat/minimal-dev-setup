[settings]
os=baremetal
arch=armv7
compiler=gcc
compiler.cppstd=gnu17
compiler.cstd=gnu17
compiler.libcxx=libstdc++11
compiler.version=13.2
build_type=Debug

[conf]
# Generic-ELF is merely a way to add .elf suffix to generated
# binaries. Setting CMAKE_EXECUTABLE_SUFFIX directly from within a
# toolchain file is considered a hack, ref:
# https://gitlab.kitware.com/cmake/cmake/-/merge_requests/6630.
# Otherwise it is the same as Generic, aka bare-metal system.
tools.cmake.cmaketoolchain:system_name=Generic-ELF
tools.cmake.cmaketoolchain:system_processor=ARM

# Assume that compiler binaries are located in PATH.
# Using compiler_executables is said to be safer than bare env
# vars. (https://stackoverflow.com/q/77373064)
tools.build:compiler_executables={"c": "arm-none-eabi-gcc", "cpp": "arm-none-eabi-g++", "asm": "arm-none-eabi-as"}

# HACK: Conan profiles don't support binutils settings,
# therefore we set them manually via CMake.
# Using extra_variables can override any settings done by
# CMakeToolchain, so it must be used with care. 
# tools.cmake.cmaketoolchain:extra_variables={"CMAKE_AR": "arm-none-eabi-ar", "CMAKE_LINKER": "arm-none-eabi-ld", "CMAKE_OBJCOPY": "arm-none-eabi-objcopy", "CMAKE_RANLIB": "arm-none-eabi-ranlib", "CMAKE_SIZE_UTIL": "arm-none-eabi-size"}

# SAMV71-specific settings are done from within the included toolchain file
tools.cmake.cmaketoolchain:user_toolchain={{ [os.path.join(profile_dir, "cmake-settings/samv71q21b.cmake")] }}

# Use Ninja as default toolchain because it's crossplatform and faster than make
tools.cmake.cmaketoolchain:generator=Ninja

[options]
# Settings for FreeRTOS (taken from FreeRTOS demo project at https://github.com/FreeRTOS/FreeRTOS/blob/main/FreeRTOS/Demo/CORTEX_M7_SAMV71_Xplained_AtmelStudio/FreeRTOSConfig.h).
# Only settings differing from the package default (as described in https://github.com/FreeRTOS/FreeRTOS-Kernel/blob/main/examples/template_configuration/FreeRTOSConfig.h) are described here.
# Setting values derived by expressions in the original file have been explicitly calculated.
freertos/*:FREERTOS_HEAP=3
freertos/*:USE_DEFAULT_CONFIGASSERT=True
freertos/*:configUSE_PORT_OPTIMIZED_TASK_SELECTION=True
freertos/*:configUSE_QUEUE_SETS=True
freertos/*:configUSE_TICK_HOOK=False
freertos/*:configCPU_CLOCK_HZ=300000000
freertos/*:configTICK_RATE_HZ=1000
freertos/*:configMINIMAL_STACK_SIZE=130
freertos/*:configTOTAL_HEAP_SIZE=47104
freertos/*:configMAX_TASK_NAME_LEN=10
freertos/*:configUSE_TRACE_FACILITY=True
freertos/*:configQUEUE_REGISTRY_SIZE=8
freertos/*:configUSE_MALLOC_FAILED_HOOK=True
freertos/*:configUSE_STATS_FORMATTING_FUNCTIONS=True
freertos/*:configTIMER_QUEUE_LENGTH=5
freertos/*:configTIMER_TASK_STACK_DEPTH=256
freertos/*:INCLUDE_eTaskGetState=True
freertos/*:INCLUDE_xTimerPendFunctionCall=True
freertos/*:configMAX_SYSCALL_INTERRUPT_PRIORITY=224
